# Enable color support of ls and also add handy aliases
[ -x /usr/bin/dircolors ] && eval "`dircolors -b`"

# OS specific aliases
if [ $OS == 'Linux' ]; then
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
	alias arpscan='sudo arp-scan -I wlan0 -l'
	alias p='ps faxl'
	alias tl='tail -f /var/log/messages'
	if [ -f /etc/debian_version ]; then
		alias ml='tail -n 30 -f /var/log/mail.log'
	else
		alias ml='tail -n 30 -f /var/log/maillog'
	fi
elif [ $OS == 'FreeBSD' ]; then
	alias ls='ls -FG'
	alias lsd='ls -lF | grep "^d"'
	alias p='ps axl'
	alias tl='tail -f /var/log/messages'
	alias ml='tail -n 30 -f /var/log/maillog'
elif [ $OS == 'NetBSD' ]; then
	LS=/usr/pkg/bin/gls
	if [ -f $LS ]; then
		alias ls="$LS --color=auto"
		alias lr="ls -lRFG"
		alias lsd="ls -lFG | grep '^d'"
	else
		alias l='ls -lF'
		alias lr='ls -lRF'
		alias lsd='ls -lF | grep "^d"'
	fi
	alias p='ps ax'
elif [ $OS == 'Darwin' ]; then
	alias ls='ls -FG'
	alias tl='tail -f /var/log/system.log'
	alias gvim='open -a MacVim'
	alias macvim='open -a MacVim'
else
	echo "What OS are you running now?"
fi

alias l='ls -l'
alias la='ls -a'
alias lal='ls -al'
alias lsd='ls -l | grep "^d"'

# Is vim installed?
if [ -f `which vim` ]; then
	if [ ! -e ~/.vimrc ]; then
		echo "You need to install your ~/.vimrc"
	fi
	alias vi='vim'
else
	alias vim='vi'
fi

alias svim='sudo vim'
alias scat='sudo cat'
alias c='clear'
alias cd..='cd ..'
alias cd...='cd ../..'
alias cd....='cd ../../..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias d='df -h'
alias recall='history | grep'
alias serial='screen /dev/tty.PL2303-* 38400'  # Serial console on WRAP/FreeBSD Server

# See what HTTP server a website uses:
what-http-server() {
	curl -s -I $(for h in "$@"; do printf "http://%s " "$h"; done) | awk -F': ' '/^Server:/ {print $2}';
}  

# Check that scr exists and set these if it does:
if which scr>/dev/null 2>&1; then
	function vim() { scr vim $* ; }
	function man() { scr man $* ; }
fi

calc() {
        perl -wlne 'print eval';
}

# USAGE: days_in_month [month [year]]
days_in_month() {
	if [ -n "$1" ]
	then
		dim_m=$1
		dim_y=$2
	else
		eval `date "+dim_m=%m dim_y=%Y"`
	fi

	case $dim_m in
		*9|*4|*6|11)
			_DAYS_IN_MONTH=30 ;;
		1|01|3|03|*5|*7|*8|10|12)
			_DAYS_IN_MONTH=31 ;;
		2|02)
			is_leap_year ${dim_y:-`date +%Y`} &&
				_DAYS_IN_MONTH=29 ||
				_DAYS_IN_MONTH=28 ;;
	esac
	echo $_DAYS_IN_MONTH
}

# USAGE: is_leap_year [year]
is_leap_year() {
	ily_year=${1:-`date +%Y`}
	case $ily_year in
		*0[48] |\
		*[2468][048] |\
		*[13579][26] |\
		*[13579][26]0|\
		*[2468][048]00 |\
		*[13579][26]00 ) _IS_LEAP_YEAR=1
			return 0 ;;
		*) _IS_LEAP_YEAR=0
			return 1 ;;
	esac
}

# Search man pages
# usage: sman command search_term
sman() {
	PAGER=less
	export PAGER
	LESS="$LESS${2:+ +/$2}" man $1
}

# usage: centre width text...
centre() {
	c_width=$1
	shift
	c_text="$*"
	c_width=$(( ($c_width + ${#c_text}) / 2 )) 
	printf "%${c_width}.${c_width}s\n" "$c_text"
}

today() {
	#files modified today
	TODAY=`date +'%d-%m-%Y'`
	ls -l "$@" | grep "$TODAY" | more
}

lnp() {
	network=`ifconfig eth0 | grep "inet " | cut -f2 -d':' | cut -f1-3 -d.`
	ping -c 2 ${network}.${1}
}

###
###   Handy Extract Program
###
extract () {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)   tar xvjf $1        ;;
			*.tar.gz)    tar xvzf $1     ;;
			*.bz2)       bunzip2 $1       ;;
			*.rar)       unrar x $1     ;;
			*.gz)        gunzip $1     ;;
			*.tar)       tar xvf $1        ;;
			*.tbz2)      tar xvjf $1      ;;
			*.tgz)       tar xvzf $1       ;;
			*.zip)       unzip $1     ;;
			*.Z)         uncompress $1  ;;
			*.7z)        7z x $1    ;;
			*)           echo "'$1' cannot be extracted via >extract<" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

#clock - A bash clock that can run in your terminal window.
clock ()
{
	while true;do
		clear;
		echo ===============;
		date +%r;
		echo ===============;
		sleep 1;
	done
}

